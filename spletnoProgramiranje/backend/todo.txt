handler za postaje:
- pridobi seznam vseh postaj za buttone (ime, številka, id)  "/stations/list" ✅
- pridobi podatke o lokaciji postaje (latitude, longitude) "/stations/location/stationId" ✅
- pridobi podatke za specifično postajo (ime, številka, linije, odhodni časi) "/stations/stationId" ✅
- get postaje within specific location "/stations/closeBy/location" (to z implementacijo geoprostorskih poizvedbe) ✅


handler za linije:
- pridobi pot specifične linije glede na id linije "/routes/lineId" ✅
- pridobi pot linije in vse postaje, ki so na poti tote linije "/routes/stations/lineId" ✅
- pridobi vse linije (id, koda linije) "/routes/list" ✅
- simulacija avtobusov na trenutni poti "/routes/simulate/lineId" (to z implementacijo web sockets)


handler za uporabnike:
- ustvari uporabnika
- pridobi uporabnika po id-ju
- avtentikacija in avtorizacija (to z implementacijo JWT)



če de čas, spremeni departures table tak, ka de seznam departerov, ne pa vsak departure posebej
naredi, ka vzemes lokacijo, ti poisce nejbljizjo postajo, ki te vodi do tja, kam ces iti
simulacija avtobusov na trenutni poti "/routes/simulate/lineId" (to z implementacijo web sockets)



naredi, ka ti posle mail invite za registracijo, ko bo čas


danes za narediti:
- dodatna dokumentacija s swagger (to nejbol vecer, spodnji dve funkciji sta ti pomembnejši)

- narediti za nejhitrejsa pot do cilja od trenutne lokacije
    - nejprej pridobis 3 nejbljizje postaje zeljene lokacije
    - poglednes, keri directioni vozijo do teh postaj (vzemi direction)
    - poglednes, kere 3 postaje s totimi routi so nejbljizje uporabnikovi lokaciji
    - preveris case odhoda za tote specificne route na totih postajah
    - te pa vse matche izpises
    - lehko te potli tudi naredis na frontend, ka ti kaze ki se ti nahajas relativno od tote zeljene postaje

    - potli naredi se, ka preveris ce je lokacija prevec vun iz maribora


- dokoncati simulacijo avtobusov
    - pogledni si ovo, kej je chatgpt recommenda pa naredi step by step
    - te pa naredi neki seznam vseh linij, toti seznami majo lehko tudi vec seznamov notri
    - naredi, da se asinhrono toti seznam vedno posodabla. naredi mutexe al kej pac GO ma
      in te pa anredi funkcijo, ki ob api callu dostopa do totega seznam3a, tudi z mutexi in vun vzame trenutno lokacijo


- api endpoints za blaza
    - idk samo inserti pa selecti pa to

- ce bo cas, delej frontend za login pa to






todo danes:
- dodatna dokumentacija s swagger (to nejbol vecer, spodnji dve funkciji sta ti pomembnejši)

- narediti za nejhitrejsa pot do cilja od trenutne lokacije
    - nejprej pridobis 3 nejbljizje postaje zeljene lokacije
    - poglednes, keri directioni vozijo do teh postaj (vzemi direction)
    - poglednes, kere 3 postaje s totimi routi so nejbljizje uporabnikovi lokaciji
    - preveris case odhoda za tote specificne route na totih postajah
    - te pa vse matche izpises
    - lehko te potli tudi naredis na frontend, ka ti kaze ki se ti nahajas relativno od tote zeljene postaje

    - potli naredi se, ka preveris ce je lokacija prevec vun iz maribora

za frontend:
    - registracija
    - login
    - to vse za map
