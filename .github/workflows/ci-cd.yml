name: CI/CD Pipeline

on:
  push:
    branches:
      - main
    paths:
      - "spletnoProgramiranje/**"

env:
  DOCKER_HUB_USERNAME: ${{ secrets.DOCKER_USERNAME }}
  WEBHOOK_URL: ${{ secrets.WEBHOOK_URL }}
  WEBHOOK_SECRET: ${{ secrets.WEBHOOK_SECRET }}

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run Backend Tests
        working-directory: ./spletnoProgramiranje/backend
        run: make test

  build_and_push_images:
    needs: test 
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Backend Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./spletnoProgramiranje/backend
          file: ./spletnoProgramiranje/backend/Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/backend:latest

      - name: Build and push Frontend Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./spletnoProgramiranje/dashboard
          file: ./spletnoProgramiranje/dashboard/dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/frontend:latest

      - name: Build and push Database Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./spletnoProgramiranje/database
          file: ./spletnoProgramiranje/database/Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/database:latest

#  update_release_branch:
#    needs: build_and_push_images 
#    if: success()
#    runs-on: ubuntu-latest
#    steps:
#      - name: Checkout code
#        uses: actions/checkout@v4
#        with:
#          ref: main 
#
#      - name: Configure Git
#        run: |
#          git config user.name "github-actions[bot]"
#          git config user.email "github-actions[bot]@users.noreply.github.com"
#
#      - name: Push main to release branch
#        run: |
#          git push origin main:release --force 

  notify_server:
    needs: build_and_push_images
    if: success()
    runs-on: ubuntu-latest
    steps:
      - name: Send webhook to server
        run: |
          curl -X POST ${{ secrets.WEBHOOK_URL }} \
          -H "Content-Type: application/json" \
          -H "X-GitHub-Event: deployment" \
          -H "X-Hub-Signature: ${{ secrets.WEBHOOK_SECRET }}" \
          -d '{
            "event": "new_backend_image",
            "repository": "${{ github.repository }}",
            "tag": "latest",
            "commit_sha": "${{ github.sha }}"
          }'


